$main-font: 'Montserrat';
$secondary-font: 'Quicksand',
'Open Sans';
$icon: 'Material Icons';
$title-color: #1f2041;
$main-font-size: 14px;
$main-font-weight: normal;
$secondary-font-weight: bold;
$main-font-style: normal;
$main-font-color: rgba(31, 32, 65, 0.75);
$icon-color: rgba(31, 32, 65, 0.5);



@mixin h($n: 1) {
  font-family: $secondary-font;
  font-style: $main-font-style;
  font-weight: $secondary-font-weight;
  color: $title-color;

  @if $n == 1 {
    font-size: rem(24);
    line-height: rem(30);
  }

  @else if $n == 2 {
    font-size: rem(19);
    line-height: rem(24);
  }

  @else if $n == 3 {
    font-family: $main-font;
    font-size: rem(12);
    line-height: rem(15);
    text-transform: uppercase;
  }
}

@mixin text {
  font-family: $main-font;
  font-style: $main-font-style;
  font-weight: $main-font-weight;
  font-size: $main-font-size;
  line-height: rem(24);
  color: $main-font-color;
}

@mixin icon {
  font-family: $icon;
  font-style: $main-font-style;
  font-weight: $main-font-weight;
  font-size: rem(24);
  line-height: rem(24);
}

@function rem($pixels, $context: $main-font-size) {
  @if (unitless($pixels)) {
    $pixels: $pixels * 1px;
  }

  @if (unitless($context)) {
    $context: $context * 1px;
  }

  @return decimal-round(($pixels / $context * 1rem), 2);
}


@function decimal-round ($number, $digits: 0, $mode: round) {
  $n: 1;

  //$number must be a number
  @if type-of($number) !=number {
    @warn '#{ $number } is not a number.';
    @return $number;
  }

  //$digits must be a unitless number
  @if type-of($digits) !=number {
    @warn '#{ $digits } is not a number.';
    @return $number;
  }

  @else if not unitless($digits) {
    @warn '#{ $digits } has a unit.';
    @return $number;
  }

  @if $digits>0 {
    @for $i from 1 through $digits {
      $n: $n * 10;
    }
  }

  @if $mode==round {
    @return round($number * $n)/$n;
  }

  @else if $mode==ceil {
    @return ceil($number * $n)/$n;
  }

  @else if $mode==floor {
    @return floor($number * $n)/$n;
  }

  @else {
    @warn '#{ $mode } is undefined keyword.';
    @return $number;
  }
}