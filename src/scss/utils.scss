/* Reset */

*,
*:before,
*:after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

/* Reset */

/*************************************/

/* Variables */

// Font
$main-font : 'Montserrat';
$secondary-font : 'Quicksand', 'Open Sans';

$main-font-color : rgba(31, 32, 65, 0.75);
$main-font-size : 14px;
$main-font-weight : normal;
$secondary-font-weight : bold;
$main-font-style: normal;
// Size
$desktop-width : 1440px;
$smdesktop-width : 980px;
$table-width : 768px;
$phone-width : 480px;
$smphone-width : 320px;

// Main color
$default-color : #ffffff;
$alpha-color : #1F2041;
$alpha-color-75 : rgba(31, 32, 65, 0.75);
$alpha-color-50 : rgba(31, 32, 65, 0.5);
$alpha-color-25 : rgba(31, 32, 65, 0.25);
$alpha-color-05 : rgba(31, 32, 65, 0.05);
$primary-color : #BC9CFF;
$secondary-color : #6FCF97;
$back : #E5E5E5;

//Gradients
$primary-grad : linear-gradient(180deg, #BC9CFF 0%, #8BA4F9 100%);
$secondary-grad : linear-gradient(180deg, #6FCF97 0%, #66D2EA 100%);

/* Variables */

/*************************************/

/* Mixins */

// px to rem
@function rem($pixels, $context: $main-font-size) {
  @if (unitless($pixels)) {
    $pixels: $pixels * 1px;
  }

  @if (unitless($context)) {
    $context: $context * 1px;
  }

  @return decimal-round(($pixels / $context * 1rem), 2);
}

@mixin size($width, $height: $width) {
  width: $width;
  height: $height;
}

// function for rounding to hundredths
@function decimal-round ($number, $digits: 0, $mode: round) {
  $n: 1;

  //$number must be a number
  @if type-of($number) !=number {
    @warn '#{ $number } is not a number.';
    @return $number;
  }

  //$digits must be a unitless number
  @if type-of($digits) !=number {
    @warn '#{ $digits } is not a number.';
    @return $number;
  }

  @else if not unitless($digits) {
    @warn '#{ $digits } has a unit.';
    @return $number;
  }

  @if $digits>0 {
    @for $i from 1 through $digits {
      $n: $n * 10;
    }
  }

  @if $mode==round {
    @return round($number * $n)/$n;
  }

  @else if $mode==ceil {
    @return ceil($number * $n)/$n;
  }

  @else if $mode==floor {
    @return floor($number * $n)/$n;
  }

  @else {
    @warn '#{ $mode } is undefined keyword.';
    @return $number;
  }
}

/* Mixins */
